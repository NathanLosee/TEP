"""initialize database

Revision ID: e8d85efb49ca
Revises: 
Create Date: 2025-05-18 17:30:25.808858

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e8d85efb49ca'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('holiday_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invalidated_tokens',
    sa.Column('token', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('token')
    )
    op.create_table('org_units',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('auth_role_permissions',
    sa.Column('resource', sa.String(), nullable=False),
    sa.Column('auth_role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['auth_role_id'], ['auth_roles.id'], ),
    sa.PrimaryKeyConstraint('resource', 'auth_role_id')
    )
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('payroll_type', sa.String(), nullable=False),
    sa.Column('payroll_sync', sa.Date(), nullable=False),
    sa.Column('workweek_type', sa.String(), nullable=False),
    sa.Column('time_type', sa.Boolean(), nullable=False),
    sa.Column('allow_clocking', sa.Boolean(), nullable=False),
    sa.Column('allow_delete', sa.Boolean(), nullable=False),
    sa.Column('holiday_group_id', sa.Integer(), nullable=True),
    sa.Column('org_unit_id', sa.Integer(), nullable=False),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['holiday_group_id'], ['holiday_groups.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['org_unit_id'], ['org_units.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('holidays',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('holiday_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['holiday_group_id'], ['holiday_groups.id'], ),
    sa.PrimaryKeyConstraint('name', 'holiday_group_id')
    )
    op.create_table('department_memberships',
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('department_id', 'employee_id')
    )
    op.create_table('event_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('log', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('timeclock',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clock_in', sa.DateTime(), nullable=False),
    sa.Column('clock_out', sa.DateTime(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('auth_role_memberships',
    sa.Column('auth_role_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['auth_role_id'], ['auth_roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('auth_role_id', 'user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('auth_role_memberships')
    op.drop_table('users')
    op.drop_table('timeclock')
    op.drop_table('event_log')
    op.drop_table('department_memberships')
    op.drop_table('holidays')
    op.drop_table('employees')
    op.drop_table('auth_role_permissions')
    op.drop_table('org_units')
    op.drop_table('invalidated_tokens')
    op.drop_table('holiday_groups')
    op.drop_table('departments')
    op.drop_table('auth_roles')
    # ### end Alembic commands ###
