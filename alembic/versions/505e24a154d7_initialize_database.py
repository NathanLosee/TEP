"""initialize database

Revision ID: 505e24a154d7
Revises:
Create Date: 2025-03-30 19:15:18.383359

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "505e24a154d7"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auth_roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "departments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "employees",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("alt_id", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=True),
        sa.Column("payroll_type", sa.String(), nullable=False),
        sa.Column("payroll_sync", sa.Date(), nullable=False),
        sa.Column("workweek_type", sa.String(), nullable=False),
        sa.Column("time_type", sa.Boolean(), nullable=False),
        sa.Column("allow_clocking", sa.Boolean(), nullable=False),
        sa.Column("allow_delete", sa.Boolean(), nullable=False),
        sa.Column("org_unit_id", sa.Integer(), nullable=False),
        sa.Column("manager_id", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "org_units",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "auth_role_memberships",
        sa.Column("auth_role_id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["auth_role_id"],
            ["auth_roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employees.id"],
        ),
        sa.PrimaryKeyConstraint("auth_role_id", "employee_id"),
    )
    op.create_table(
        "auth_role_permissions",
        sa.Column("auth_role_id", sa.Integer(), nullable=False),
        sa.Column(
            "http_method",
            sa.Enum("GET", "POST", "PUT", "DELETE", name="httpmethod"),
            nullable=False,
        ),
        sa.Column(
            "resource",
            sa.Enum(
                "EMPLOYEE",
                "DEPARTMENT",
                "HOLIDAY",
                "JOB",
                "ORG_UNIT",
                "AUTH_ROLE",
                "AUTH_ROLE_PERMISSION",
                "AUTH_ROLE_MEMBERSHIP",
                name="resourcetype",
            ),
            nullable=False,
        ),
        sa.Column("restrict_to_self", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["auth_role_id"],
            ["auth_roles.id"],
        ),
        sa.PrimaryKeyConstraint("auth_role_id", "http_method", "resource"),
    )
    op.create_table(
        "department_memberships",
        sa.Column("department_id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["departments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employees.id"],
        ),
        sa.PrimaryKeyConstraint("department_id", "employee_id"),
    )
    op.create_table(
        "holidays",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.Column("org_unit_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["org_unit_id"],
            ["org_units.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "jobs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("department_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["departments.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("jobs")
    op.drop_table("holidays")
    op.drop_table("department_memberships")
    op.drop_table("auth_role_permissions")
    op.drop_table("auth_role_memberships")
    op.drop_table("org_units")
    op.drop_table("employees")
    op.drop_table("departments")
    op.drop_table("auth_roles")
    # ### end Alembic commands ###
